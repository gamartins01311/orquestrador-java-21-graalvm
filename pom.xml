<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.4</version>
        <relativePath/>
    </parent>

    <groupId>orquestrador</groupId>
    <artifactId>orquestrador.java.21</artifactId>
    <version>1.0.11</version>
    <name>orquestrador.java.21</name>
    <description>Orquestrador de testes POC java 21 com Graalvm e Virtual Threads</description>

    <properties>
        <java.version>21</java.version>
        <opentelemetry.version>1.29.0</opentelemetry.version>
    </properties>

    <!-- BOM para garantir que todas as dependências OpenTelemetry usem a mesma versão -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${opentelemetry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- OpenTelemetry -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
        </dependency>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Feign -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>4.2.0</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Lombok Annotation Processing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.38</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Spring Boot Plugin + Buildpack Config -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <image>
                        <builder>paketobuildpacks/builder-jammy-base</builder>
                        <env>
                            <BP_JVM_VERSION>21</BP_JVM_VERSION>
                            <JAVA_TOOL_OPTIONS>-XX:+UseG1GC</JAVA_TOOL_OPTIONS>
                            <BPL_JVM_HEAD_ROOM>0</BPL_JVM_HEAD_ROOM>
                            <BPL_JVM_THREAD_COUNT>50</BPL_JVM_THREAD_COUNT>
                            <BPL_JVM_DIRECT_MEMORY_SIZE>64M</BPL_JVM_DIRECT_MEMORY_SIZE>
                            <BPL_JAVAAGENT>https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar</BPL_JAVAAGENT>
                            <OTEL_SERVICE_NAME>orquestrador-graalvm</OTEL_SERVICE_NAME>
                            <OTEL_EXPORTER_OTLP_ENDPOINT>http://datadog.datadog.svc.cluster.local:4317</OTEL_EXPORTER_OTLP_ENDPOINT>
                            <OTEL_METRICS_EXPORTER>none</OTEL_METRICS_EXPORTER>
                            <OTEL_TRACES_EXPORTER>otlp</OTEL_TRACES_EXPORTER>
                            <OTEL_LOGS_EXPORTER>none</OTEL_LOGS_EXPORTER>
                            <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                --initialize-at-build-time=io.opentelemetry,io.opentelemetry.exporter.otlp.trace
                                --initialize-at-run-time=io.opentelemetry.sdk.common.export.RetryPolicy
                                --trace-class-initialization=io.opentelemetry.sdk.common.export.RetryPolicy
                                --report-unsupported-elements-at-runtime
                                --allow-incomplete-classpath
                            </BP_NATIVE_IMAGE_BUILD_ARGUMENTS>

                        </env>
                    </image>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- GraalVM Native Image -->
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <imageName>orquestrador</imageName>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
