pipeline {
    agent any

    environment {
        IMAGE_NAME = 'orquestrador.java.21'
        IMAGE_TAG = '1.0.0'
        IMAGE_REGISTRY = 'localhost:5000'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    if (fileExists('orquestrador-java-21-graalvm')) {
                        deleteDir()
                    }
                }
                withCredentials([usernamePassword(credentialsId: 'github-token-credentials-id', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git clone https://$GITHUB_USER:$GITHUB_TOKEN@github.com/gamartins01311/orquestrador-java-21-graalvm.git
                        ls -lah orquestrador-java-21-graalvm
                    '''
                }
            }
        }

        stage('Build com Paketo (Native Image)') {
            steps {
                dir('orquestrador-java-21-graalvm') {
                    sh '''
                        pack build $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
                            --path . \
                            --builder paketobuildpacks/builder:base \
                            --buildpack paketo-buildpacks/oracle \
                            --env BP_NATIVE_IMAGE=true \
                            --env BP_NATIVE_IMAGE_BUILD_ARGUMENTS='-DskipTests' \
                            --publish
                    '''
                }
            }
        }


        stage('Build Docker Image com Bin√°rio Nativo') {
            steps {
                dir('orquestrador-java-21-graalvm') {
                    sh '''
                        docker build -f Dockerfile.native -t $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push $IMAGE_REGISTRY/$IMAGE_NAME:$IMAGE_TAG'
            }
        }

        stage('Deploy to K3s') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-k3', variable: 'KUBECONFIG_FILE')]) {
                    dir('orquestrador-java-21-graalvm') {
                        sh '''
                            mkdir -p ~/.kube
                            cp $KUBECONFIG_FILE ~/.kube/config
                            kubectl apply -f infra/manifests/deployment.yaml
                            kubectl apply -f infra/manifests/service.yaml
                            kubectl apply -f infra/manifests/gateway.yaml
                            kubectl apply -f infra/manifests/virtualservice.yaml
                            kubectl apply -f infra/manifests/destinationrule.yaml
                        '''
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    deleteDir()
                }
            }
        }
    }
}
